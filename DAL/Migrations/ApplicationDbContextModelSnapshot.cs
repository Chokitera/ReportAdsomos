// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Model.MetaDados.Agente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("FilaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("FilaId");

                    b.ToTable("Agentes", (string)null);
                });

            modelBuilder.Entity("Model.MetaDados.Fila", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Setor")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("Fila", (string)null);
                });

            modelBuilder.Entity("Model.MetaDados.ObservacoesAgente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgenteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Duracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("HoraFinal")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("HoraInicial")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("AgenteId");

                    b.ToTable("Observacoes", (string)null);
                });

            modelBuilder.Entity("Model.MetaDados.Agente", b =>
                {
                    b.HasOne("Model.MetaDados.Fila", "Fila")
                        .WithMany()
                        .HasForeignKey("FilaId");

                    b.Navigation("Fila");
                });

            modelBuilder.Entity("Model.MetaDados.ObservacoesAgente", b =>
                {
                    b.HasOne("Model.MetaDados.Agente", "Agente")
                        .WithMany()
                        .HasForeignKey("AgenteId");

                    b.Navigation("Agente");
                });
#pragma warning restore 612, 618
        }
    }
}
